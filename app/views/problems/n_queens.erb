<section class="problem">
  <h1>N Queens</h1>

  <%= explanation do %>
    Given a positive integer N, determine if it's possible to
    arrange N queens on an NxN board such that no two queens
    attack the same squares.

    Return the board if it's possible. Otherwise return null.
  <% end %>

  <%= code_inline do %>
    Input:   5
    Output:  1 0 0 0 0
             0 0 1 0 0
             0 0 0 0 1
             0 1 0 0 0
             0 0 0 1 0

    Note:    0 = an empty square
             1 = a square with a queen
  <% end %>
</section>

<%= solutions_table do %>
  Brute force            O(n^2 * n^n)   O(n^2)
  Backtracking           O(n!)          O(n^2)
  Closed-form solution   O(n)           O(n^2)
<% end %>

<section class="solutions">
  <section class="solution">
    <h2>Solution 1: Brute force</h2>
    <%= rb_code "code/problems/n_queens/s1.rb" %>
    <%= complexity_table do %>
      Time   O(n^2 * n^n)
      Space  O(n^2)
    <% end %>
  </section>

  <section class="solution">
    <h2>Solution 2: Backtracking</h2>
    <%= rb_code "code/problems/n_queens/s2.rb" %>
    <%= complexity_table do %>
      Time   O(n!)
      Space  O(n^2)
    <% end %>
  </section>

  <section class="solution">
    <h2>Solution 3: Closed form</h2>
    <%= rb_code "code/problems/n_queens/s3.rb" %>
    <%= complexity_table do %>
      Time   O(n)
      Space  O(n^2)
    <% end %>
  </section>
</section>

<%= resources_section do %>
  Wikipedia - Eight queens puzzle
  https://en.wikipedia.org/wiki/Eight_queens_puzzle
<% end %>
