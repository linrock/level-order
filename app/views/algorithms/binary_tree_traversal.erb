<div class="container">
  <h1>Binary tree traversal</h1>

  <%= rb_code "code/data_structures/binary_tree/tree_node.rb" %>

  <h2>Depth-first traversal</h2>
  <div>
    Visiting the end of each branch of a tree before
    visitng the next branch. Depth-first traversals use
    stacks to track the progress of the traversal, whether
    implicitly using the call stack or explicitly using a
    stack data structure.
  </div>

  <div>Inorder</div>
  <%= rb_code "code/algorithms/binary_tree_traversal/inorder.rb" %>
  <%= rb_code "code/algorithms/binary_tree_traversal/inorder_iterative.rb" %>

  <div>Preorder</div>
  <%= rb_code "code/algorithms/binary_tree_traversal/preorder.rb" %>
  <%= rb_code "code/algorithms/binary_tree_traversal/preorder_iterative.rb" %>

  <div>Postorder</div>
  <%= rb_code "code/algorithms/binary_tree_traversal/postorder.rb" %>
  <%= rb_code "code/algorithms/binary_tree_traversal/postorder_iterative.rb" %>

  <h2>Breadth-first traversal</h2>
  <div>
    Visiting each level of the tree before visiting the
    next level. Iterative bread-first traversals use queues
    to track the progress of the traversal.
  </div>

  <div>Level-order</div>
  <%= rb_code "code/algorithms/binary_tree_traversal/levelorder_iterative.rb" %>
</div>
